@using Appology.Enums
@using Appology.Helpers
@using System.Configuration
@model Appology.Website.Areas.MiCalendar.ViewModels.EventActivityHubVM
@{
    ViewBag.Title = "Activity Hub";
    ViewBag.Frequency = ((DateFrequency)Model.Filter.Frequency);
}

<div class="content-shadow">
    <div class="content-inner light-bg">
        <h4>
            <span class="fas fa-chart-bar"> Activity Hub</span>
        </h4>
        <div class="form-inline" role="form">
            <div class="row" style="margin: 10px !important">
                <div class="form-group">
                    <select class="form-control" id="frequency" style="width:150px; display: inline">
                        @foreach (DateFrequency frequency in Enum.GetValues(typeof(DateFrequency)))
                        {
                            <option value="@frequency" selected="@(Model.Filter.Frequency == frequency ? true: false)">@frequency</option>
                        }
                    </select>
                </div>
                <div class="form-group" id="showInterval">
                    <select class="form-control" id="interval" style="width:90px; display: inline">
                        @for (int i = 1; i <= 30; i++)
                        {
                            <option value="@i" selected="@(Model.Filter.Interval == i ? true : false)">X = @i</option>
                        }
                    </select>
                </div>

                <div id="showDateRanges" style="display: none">
                    <div class="form-group" style="display: inline">
                        @Html.TextBoxFor(x => x.Filter.FromDateRange, "{0:yyyy-MM-dd}", new { id = "fromDate", style = "width:170px", @class = "form-control", required = "required", @type = "date" })
                    </div>
                    <div class="form-group" style="display: inline">
                        @Html.TextBoxFor(x => x.Filter.ToDateRange, "{0:yyyy-MM-dd}", new { id = "toDate", style = "width:170px", @class = "form-control", required = "required", @type = "date" })
                    </div>
                </div>
                <div id="load-activities" style="display: none; margin-left: 5px">
                    <div class="loader loader-medium"></div>
                </div>
            </div>
        </div>
        <div class="just-padding">
            <div class="list-group list-group-root well" id="activities">
                @foreach (var tagGroup in Model.EventsOverview)
                {
                    if (!string.IsNullOrEmpty(tagGroup.Key.TagGroupName))
                    {
                        string key = Utils.RemoveSpecialCharacters($"{tagGroup.Key.TagGroupName}{tagGroup.Key.TagGroupdId}");

                        <div class="list-group">
                            <a href="#@key" class="list-group-item" data-toggle="collapse">
                                <i class="fas fa-chevron-down"></i> @tagGroup.Key.TagGroupName
                                @if (tagGroup.Value.Count(x => x.TagGroupId == tagGroup.Key.TagGroupdId) > 1)
                                {
                                    <span class="float-right" style="color: #000; font-size: small">
                                        <i class="fas fa-tags"></i> @tagGroup.Key.Text
                                    </span>
                                }
                            </a>
                            <div class="list-group in collapse show" id="@key">
                                @foreach (var e in tagGroup.Value.Where(x => x.TagGroupId == tagGroup.Key.TagGroupdId))
                                {
                                    <div class="list-group-item">
                                        <span class="fas @e.ActivityTag" style="color: @e.Color"></span> <small> @e.Text</small>
                                        @if (e.ProgressBarWeeklyHours.TargetWeeklyHours != 0 && e.ProgressBarWeeklyHours.ProgressBarPercentage > 0)
                                        {
                                            <div class="progress">
                                              <div class="progress-bar progress-bar-striped progress-bar-animated @e.ProgressBarWeeklyHours.ProgressBarColor" role="progressbar" aria-valuenow="@e.ProgressBarWeeklyHours.ActualWeeklyHours" aria-valuemin="0" aria-valuemax="@e.ProgressBarWeeklyHours.TargetWeeklyHours" style="width: @(e.ProgressBarWeeklyHours.ProgressBarPercentage)%">
                                                  @(e.ProgressBarWeeklyHours.ProgressBarPercentage)% complete targetting @e.ProgressBarWeeklyHours.TargetWeeklyHours hours a week
                                              </div>
                                            </div>
                                        }
                                        @foreach (var avatar in e.Avatars)
                                        {
                                            if (avatar.Length == 2)
                                            {
                                                <p default-avatar="@avatar" style="width: 24px; height: 24px; float: right"></p>
                                            }
                                            else
                                            {
                                                <img src="@ConfigurationManager.AppSettings["RootUrl"]/@avatar" style="width: 24px; height: 24px; float: right" />
                                            }
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $(document).ready(function () {

            $("#interval").change(function () {
                getEventsActivity();
            });

            $("#toDate").change(function () {
                getEventsActivity();
            });

            $("#frequency").change(function () {
                if ($(this).val().indexOf('Last') >= 0) {
                    $('#showInterval').show(500);
                    $('#showDateRanges').hide(500);
                }
                else if ($(this).val() == '@DateFrequency.DateRange') {
                    $('#showDateRanges').show(500);
                    $('#showInterval').hide(500);
                }
                else {
                    $('#showDateRanges').hide(500);
                    $('#showInterval').hide(500);
                }

                if ($(this).val() != '@DateFrequency.DateRange') {
                    getEventsActivity();
                }
            });

            function getEventsActivity() {
                var interval = $('#interval').val() == "" ? '@Model.Filter.Interval' : $('#interval').val();
                var fromDate = $('#fromDate').val() == "" ? '@Model.Filter.FromDateRange' : $('#fromDate').val();
                var toDate = $('#toDate').val() == "" ? '@Model.Filter.ToDateRange' : $('#toDate').val();

                $("#load-activities").show();
                $.ajax({
                    type: "GET",
                    data: {
                        'frequency': $('#frequency').val(),
                        'interval': interval,
                        'fromDate': fromDate,
                        'toDate': toDate
                    },
                    url: "/Event/FilteredActivityHub/",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        $("#load-activities").hide();
                        $("#activities").html("");

                        var trHTML = response.Content;
                        if (response.Content == 0) {
                            trHTML += '<div class="list-group-item"><span class="fas fa-times-circle"> No activities found</span></div>';
                        } else {
                            trHTML = response.Content;
                        }

                        $('#activities').append(trHTML);
                    },
                    error: function (result) {
                        alert("Error: " + result.status);
                    }
                })
            }

            $('.list-group-item').on('click', function () {
                $('.fas', this)
                    .toggleClass('fa-chevron-right')
                    .toggleClass('fa-chevron-down');
            });
        })
    </script>
}
