@using Appology.Enums
@using Appology.Helpers
@using System.Configuration
@model Appology.Website.Areas.MiCalendar.ViewModels.ActivityHubVM
@{
    ViewBag.Title = "Activity Hub";
    ViewBag.Frequency = ((DateFrequency)Model.Filter.Frequency);
}

<div class="content-shadow">
    <div class="content-inner light-bg">
        <h4>
            <span class="fas fa-chart-bar"> Activity Hub</span>
        </h4>
        <div role="form" style="margin-left: 10px !important">
            <div class="row">
                <div class="form-group">
                    <select class="form-control" id="frequency" style="width:150px; display: inline">
                        @foreach (DateFrequency frequency in Enum.GetValues(typeof(DateFrequency)))
                        {
                            <option value="@frequency" selected="@(Model.Filter.Frequency == frequency ? true: false)">@frequency</option>
                        }
                    </select>
                </div>
                <div class="form-group" id="showInterval">
                    <select class="form-control" id="interval" style="width:90px; display: inline">
                        @for (int i = 1; i <= 30; i++)
                        {
                            <option value="@i" selected="@(Model.Filter.Interval == i ? true : false)">X = @i</option>
                        }
                    </select>
                </div>

                <div id="showDateRanges" style="display: none">
                    <div class="form-group" style="display: inline">
                        @Html.TextBoxFor(x => x.Filter.FromDateRange, "{0:yyyy-MM-dd}", new { id = "fromDate", style = "width:170px", @class = "form-control", required = "required", @type = "date" })
                    </div>
                    <div class="form-group" style="display: inline">
                        @Html.TextBoxFor(x => x.Filter.ToDateRange, "{0:yyyy-MM-dd}", new { id = "toDate", style = "width:170px", @class = "form-control", required = "required", @type = "date" })
                    </div>
                </div>
                <div class="form-group">
                    <select id="tagId" class="form-control">
                        <option value="0">Add Activity</option>
                        @foreach (var tag in Model.UserTags)
                        {
                            <option value="@(tag.TargetUnit).@(tag.Id)">@tag.Name</option>
                        }
                    </select>
                </div>
                <div id="activity-hub-form" style="display:none ">
                    <div class="form-group">
                        <input type="date" id="date" class="form-control" />
                    </div>
                    <div class="form-group">
                        <select id="value" class="form-control">
                            <option value="0"></option>
                        </select>
                    </div>
                </div>
                <div id="load-activities" style="display: none; margin-left: 5px">
                    <div class="loader loader-medium"></div>
                </div>
            </div>
        </div>
        <div id="hub-activities" class="just-padding" style="display: none">
            <i class="fas fa-chevron-right"></i> <span id="view-stats">Hub Stats</span>
            @if (Model.ActivityHub != null && Model.ActivityHub.Any())
            {
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th scope="col">Tag</th>
                            <th scope="col">Value</th>
                            <th scope="col">Date</th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody id="hub">
                        @foreach (var act in Model.ActivityHub)
                        {
                            <tr>
                 
                                <td><span class="fas fa-tag" style="color: @act.ThemeColor"></span> @act.Subject</td>
                                <td>@act.Value @(act.TargetUnit == "hours" ? "minutes" : act.TargetUnit)</td>
                                <td>@DateUtils.GetPrettyDate(act.Date)</td>
                                <td data-model-id="@act.Id" onclick="deleteActivity(this)">
                                    <div class="deleting-@act.Id" style="display: none">
                                        <div class="loader loader-small"></div>
                                    </div>
                                    <div class="delete-@act.Id">
                                        <i class='fas fa-times'></i>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
        <div id="hub-stats" class="just-padding">
            <i class="fas fa-chevron-right"></i> <span id="view-activities">Added Activities</span>
            <div class="list-group list-group-root well" id="activities">
                @foreach (var tagGroup in Model.Activities)
                {
                    if (!string.IsNullOrEmpty(tagGroup.Key.TagGroupName))
                    {
                        string key = Utils.RemoveSpecialCharacters($"{tagGroup.Key.TagGroupName}{tagGroup.Key.TagGroupdId}");

                        <div class="list-group">
                            <a href="#@key" class="list-group-item" data-toggle="collapse">
                                <i class="fas fa-chevron-down"></i> @tagGroup.Key.TagGroupName
                                @if (tagGroup.Value.Count(x => x.TagGroupId == tagGroup.Key.TagGroupdId && x.TargetUnit == "hours") > 1)
                                {
                                    <span class="float-right" style="color: #000; font-size: small">
                                        <i class="fas fa-clock"></i> @tagGroup.Key.Text
                                    </span>
                                }
                            </a>
                            <div class="list-group in collapse show" id="@key">
                                @foreach (var e in tagGroup.Value.Where(x => x.TagGroupId == tagGroup.Key.TagGroupdId))
                                {
                                    <div class="list-group-item">
                                        <span class="fas @e.ActivityTag" style="color: @e.Color"></span> <small> @e.Text</small>
                                        @if (e.ProgressBar.TargetValue.HasValue && e.ProgressBar.ProgressBarPercentage > 0)
                                        {
                                            <div>
                                                <div class="ah-stats">
                                                    @if (e.PreviousSecondMonthTotalValue > 0)
                                                    {
                                                        <span class="ah-badge badge badge-@(e.PreviousSecondMonthSuccess ? "success" : "danger")">
                                                            <i class="fas fa-arrow-@(e.PreviousSecondMonthSuccess ? "up" : "down")"></i>
                                                            <span class="prev-secondmonth-desktop">@e.PreviousSecondMonthTotalValue @e.TargetUnit in @Model.PrevSecondMonthName</span>
                                                            <span class="prev-secondmonth-mobile">@Model.PrevSecondMonthNameAbbrev @e.PreviousSecondMonthTotalValue</span>
                                                        </span>
                                                    }
                                                    @if (e.PreviousMonthTotalValue > 0)
                                                    {
                                                        <span class="ah-badge badge badge-@(e.PreviousMonthSuccess ? "success" : "danger")">
                                                            <i class="fas fa-arrow-@(e.PreviousMonthSuccess ? "up" : "down")"></i>
                                                            <span class="prev-month-desktop">@e.PreviousMonthTotalValue @e.TargetUnit in @Model.PrevMonthName</span>
                                                            <span class="prev-month-mobile">@Model.PrevMonthNameAbbrev @e.PreviousMonthTotalValue</span>
                                                        </span>
                                                    }
                                                    <span class="ah-badge badge badge-@(e.LastWeekSuccess ? "success" : "danger")">
                                                        <i class="fas fa-arrow-@(e.LastWeekSuccess ? "up" : "down")"></i>
                                                        <span class="prev-month-desktop">@e.LastWeekTotalValue @e.TargetUnit previous week</span>
                                                        <span class="prev-month-mobile">PW @e.LastWeekTotalValue</span>
                                                    </span>
                                                    <span class="ah-badge badge badge-info">
                                                        <i class="fas fa-clock"></i>
                                                        <span class="this-week-desktop">@e.ThisWeekTotalValue @e.TargetUnit current week</span>
                                                        <span class="this-week-mobile">CW @e.ThisWeekTotalValue</span>
                                                    </span>
                                                    <span class="ah-badge badge badge-primary">
                                                        <i class="fas fa-bullseye"></i>
                                                        <span class="target-desktop">@e.ProgressBar.TargetFrequency Target @e.ProgressBar.TargetValue @e.ProgressBar.TargetUnit</span>
                                                        <span class="target-mobile">Target  @e.ProgressBar.TargetValue</span>
                                                    </span>
                                                    </div>
                                                <div class="progress" style="height: 20px">
                                                    <div class="progress-bar progress-bar-striped progress-bar-animated @e.ProgressBar.ProgressBarColor" role="progressbar" aria-valuenow="@e.ProgressBar.ActualValue" aria-valuemin="0" aria-valuemax="@e.ProgressBar.TargetValue.Value" style="width: @(e.ProgressBar.ProgressBarPercentage)%; padding: 10px">
                                                        Averaging @e.ProgressBar.ActualValue @e.ProgressBar.TargetUnit @e.ProgressBar.TargetFrequency.ToString().ToLower()
                                                    </div>
                                                </div>
                                            </div>

                                        }
                                        @foreach (var avatar in e.Avatars)
                                        {
                                            if (avatar.Length == 2)
                                            {
                                                <p default-avatar="@avatar" style="width: 24px; height: 24px; float: right"></p>
                                            }
                                            else
                                            {
                                                <img src="@ConfigurationManager.AppSettings["RootUrl"]/@avatar" style="width: 24px; height: 24px; float: right" />
                                            }
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        function deleteActivity(obj) {
            var ele = $(obj);
            var Id = ele.data("model-id");

            if (confirm('Are you sure you want to delete this?')) {
                $('.deleting-' + Id).show();
                $('.delete-' + Id).hide();

                $.ajax({
                    type: "GET",
                    data: { 'Id': Id },
                    url: "@Url.MvcRoute(Section.ActivityHubDelete).RouteUrl",
                    success: function (response) {
                        $('.deleting-' + Id).hide();
                        $('.delete-' + Id).show();
                        ele.closest("tr").remove();

                        if (!respose) {
                            alert("An error occured");
                        }
                    },
                    error: function (result) {
                        $('.deleting-' + Id).hide();
                        $('.delete-' + Id).show();
                        alert("Error: " + result.status);
                    }
                });
            }
        }

        $(document).ready(function () {
            setInterval(function () {
                getEventsActivity(); // this will run after every 5 seconds
            }, 300000);

            $('#view-activities').click(function () {
                $('#hub-stats').slideUp('slow');
                $('#hub-activities').slideDown('slow');
            });

            $('#view-stats').click(function () {
                $('#hub-activities').slideUp('slow');
                $('#hub-stats').slideDown('slow');

            });

            $("#tagId").change(function () {
                if ($(this).val() != 0) {
                    $('#activity-hub-form').show(500);

                    var unit = $('#tagId').val().split(".")[0];
                    $("#value option:first").text("Select " + unit);
                    $("#value").find('option').not(':first').remove();
                    $("#date").val(new Date().toISOString().split('T')[0]);

                    if (unit == "hours") {
                        for (var i = 1; i <= 300; i++) {
                            jQuery('<option/>', {
                                value: i,
                                html: convertMinsToHrsMins(i)
                            }).appendTo('#value');
                        }
                    }
                    else {

                        for (var i = 1; i <= 300; i++) {
                            jQuery('<option/>', {
                                value: i,
                                html: i + " " + unit
                            }).appendTo('#value');
                        }
                    }

                }
                else {
                    $('#activity-hub-form').hide(500);
                }
            });

            $("#value").change(function () {
                if ($(this).val() != 0 && $("#tagId").val() != 0) {
                    addActivity();
                    getEventsActivity();
                }
            });

            $("#interval").change(function () {
                getEventsActivity();
            });

            $("#toDate").change(function () {
                getEventsActivity();
            });

            $("#frequency").change(function () {
                if ($(this).val().indexOf('Last') >= 0) {
                    $('#showInterval').show(500);
                    $('#showDateRanges').hide(500);
                }
                else if ($(this).val() == '@DateFrequency.DateRange') {
                    $('#showDateRanges').show(500);
                    $('#showInterval').hide(500);
                }
                else {
                    $('#showDateRanges').hide(500);
                    $('#showInterval').hide(500);
                }

                if ($(this).val() != '@DateFrequency.DateRange') {
                    getEventsActivity();
                }
            });

            function convertMinsToHrsMins(minutes) {
                var hours = (minutes / 60);
                var rhours = Math.floor(hours);
                var minutes = (hours - rhours) * 60;
                var rminutes = Math.round(minutes);

                if (rhours == 0) {
                    return rminutes + " minute" + (rminutes > 1 ? "s" : "");
                }
                else {

                    if (rminutes === 0) {
                        return rhours + " hour" + (rhours > 1 ? "s" : "");
                    }
                    else {
                        return rhours + " hour" + (rhours > 1 ? "s" : "") + ", " + rminutes + " minute" + (rminutes > 1 ? "s" : "");
                    }
                }
            }

            function addActivity() {
                var tagId = $('#tagId').val().split(".")[1];
                var value = $('#value').val();

                if (confirm('Add ' + value + ' to this tag?')) {
                    $.ajax({
                        type: "GET",
                        data: {
                            'tagId': tagId,
                            'value': value,
                            'dateStr': $('#date').val()
                        },
                        url: "@Url.MvcRoute(Section.ActivityHubAdd).RouteUrl",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            $('#value').val(0)
                            $('#tagId').val(0)
                            $('#activity-hub-form').hide(500);

                            if (!response) {
                                alert("An error occured");
                            }
                        },
                        error: function (result) {
                            $('#value').val(0)
                            $('#tagId').val(0)
                            $('#activity-hub-form').hide(500);
                            alert("Error: " + result.status);
                        }
                    });
                }
            }

            function getEventsActivity() {
                var interval = $('#interval').val() == "" ? '@Model.Filter.Interval' : $('#interval').val();
                var fromDate = $('#fromDate').val() == "" ? '@Model.Filter.FromDateRange' : $('#fromDate').val();
                var toDate = $('#toDate').val() == "" ? '@Model.Filter.ToDateRange' : $('#toDate').val();

                $("#load-activities").show();
                $.ajax({
                    type: "GET",
                    data: {
                        'frequency': $('#frequency').val(),
                        'interval': interval,
                        'fromDate': fromDate,
                        'toDate': toDate
                    },
                    url: "@Url.MvcRoute(Section.ActivityHubFilter).RouteUrl",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        $("#load-activities").hide();
                        $("#activities").html("");
                        $("#hub").html("");

                        /* stats */
                        var trHTML = response.stats.Content;
                        if (response.stats.Content == 0) {
                            trHTML += '<div class="list-group-item"><span class="fas fa-times-circle"> No activities found</span></div>';
                        } else {
                            trHTML = response.stats.Content;
                        }

                        $('#activities').append(trHTML);

                        /* hub */
                        var trHTML = response.hub.Content;
                        if (response.hub.Content == 0) {
                            trHTML += '<tr><td colspan="4"><i class="fas fa-times-circle"> No activities found</td></tr>';
                        } else {
                            trHTML = response.hub.Content;
                        }

                        $('#hub').append(trHTML);
                    },
                    error: function (result) {
                        //alert("Error: " + result.status);
                    }
                })
            }

            $('.list-group-item').on('click', function () {
                $('.fas', this)
                    .toggleClass('fa-chevron-right')
                    .toggleClass('fa-chevron-down');
            });
        })
    </script>
}
