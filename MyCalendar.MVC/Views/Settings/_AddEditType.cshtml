@model MyCalendar.Website.ViewModels.TypeVM
@using MyCalendar.Helpers
@using MyCalendar.Enums
@using MyCalendar.Website.ViewModels
@using (Html.BeginForm((Model.Edit ? Url.MvcRoute(Section.UpdateType).ActionName : Url.MvcRoute(Section.AddType).ActionName), Url.MvcRoute(Section.AddType).ControllerName))
{
    @Html.AntiForgeryToken()
    <div class="add-edit-@(Model.Type?.Id ?? (int?)null)">
        <div id="@(Model.Edit ? $"editmodal-{Model.Type.Id}" : (Model.Type != null ? $"addmodal-{Model.Type.Id}" : $"addmodalroot-{Model.Group.Id}"))" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">
                            <i class="fas fa-folder-open"></i>
                            @(Model.Edit ? $"Edit folder {Model.Name}" : $"New folder in {Model.Type?.Name ?? "root"}")
                        </h4>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>
                    <div class="modal-body">
                        <div class="col-sm">
                            <div class="form-group">
                                <input type="text" style="width: 220px" class="form-control" id="name" name="Name" value="@(Model.Edit ? Model.Type.Name : "")" placeholder="Name" required />
                            </div>
                            <div class="form-group">
                                <div class="alert alert-info">
                                    <div class="row">
                                        <div class="col-auto align-self-start icon-align">
                                            <div class="fas fa-user-friends"></div>
                                        </div>
                                        <div class="col">
                                            @Model.Group.InviteDescription
                                            <hr />
                                            @if (Model.Buddys != null && Model.Buddys.Any())
                                            {
                                                foreach (var buddy in Model.Buddys)
                                                {
                                                    <div class="form-check" style="word-wrap:break-word; margin-left: 10px">
                                                        <input class="form-check-input" type="checkbox" name="InviteeId[]" value="@buddy.UserID" @(Model.Type != null && Model.Type.InviteeIdsList != null && Model.Type.InviteeIdsList.Contains(buddy.UserID) ? "checked=\"checked\"" : "") /> @buddy.Name
                                                    </div>
                                                }
                                            }
                                            else
                                            {
                                                <span>No buddys</span>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @if (Model.Edit)
                            {
                                <div class="alert alert-warning">
                                    <div class="row">
                                        <div class="col-auto align-self-start icon-align">
                                            <div class="fas fa-random"></div>
                                        </div>
                                        <div class="col">
                                            Move folder
                                            <hr />
                                            @Html.Partial("_FolderSelection", new DocumentMoveVM
                                                {
                                                    UserTypes = Model.UserTypes,
                                                    Type = (Model.Type.Id.ToString(), Model.Type.Name),
                                                    IsDocument = false
                                                });
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="modal-footer">
                        <input type="hidden" name="UserCreatedId" value="@(Model.Type?.UserCreatedId ?? Model.User.UserID)" />
                        <input type="hidden" name="GroupId" value="@Model.Group.Id" />
                        @if (Model.Type != null)
                        {
                            <input type="hidden" name="SuperTypeId" value="@Model.Type.SuperTypeId" />
                            <input type="hidden" name="Id" value="@Model.Type.Id" />
                        }
                        @if (Model.Edit)
                        {
                            <a class="btn btn-danger float-left" href="@Url.Action(Url.MvcRoute(Section.RemoveType).ActionName, new { Id = Model.Type.Id })" onclick="return confirm('Are you sure?')">Delete</a>
                        }

                        <button type="submit" class="btn btn-primary">@(Model.Edit ? "Edit" : "Add")</button>
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                  
                    </div>
                </div><!-- /.modal-content -->
            </div><!-- /.modal-dialog -->
        </div><!-- /.modal -->
    </div>
}