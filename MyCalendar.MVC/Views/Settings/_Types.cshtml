@model MyCalendar.DTOs.TypesDTO
@using MyCalendar.Enums
@using MyCalendar.Helpers
@using MyCalendar.Website.ViewModels 
<div>
    @foreach (var group in Model.AccessibleGroups)
    {
        <div class="show-groups-btn-@group.Id" style="display: inline">
            <button id="btn-@group.Id" class="btn btn-light" type="button">
                <span class="fas fa-@group.FaIcon" aria-hidden="true"> @group.Name</span>
                <span class="selectedGroupId" style="display: none">@group.Id</span>
            </button>
        </div>
    }

    @foreach (var group in Model.AccessibleGroups)
    {
        <div id="show-groups-@group.Id" style="display: none">
            <span class="groupId" style="display: none">@group.Id</span>
            <div id="edit-group-@group.Id">
                <div class="treeview w-20 border" style="padding: 10px">
                    <h6 class="pt-3 pl-3" style="margin-bottom: 10px" onclick="$('#addmodalroot-@group.Id').modal('toggle')" id="addroot-@group.Id"><i class="fas fa-plus"></i> Add</h6>
                    <div style="display: none" class="addroot-@group.Id">
                        @Html.Partial("_AddEditType", new TypeVM
                            {
                                Buddys = Model.Buddys,
                                Group = group,
                                User = Model.User,
                                Edit = false
                            })
                    </div>
                    @if (Model.UserTypes.Any(x => x.GroupId == group.Id))
                    {
                        <hr />
                        <ul class="mb-1 pl-3 pb-2" style="list-style-type: none; margin-top: -10px;">
                            @helper ShowTree(IEnumerable<MyCalendar.Model.Types> types, MyCalendar.Model.Group group)
                            {
                                int i = 0;
                                foreach (var userType in types)
                                {
                                    <li class="@(!userType.Children.Any() ? "" : "expandable")" style="list-style-type: none; margin-left: 10px; margin-top: 10px;">
                                        @if (!userType.Children.Any() && i != 0)
                                        {
                                            <hr />
                                        }
                                        <i class="@(!userType.Children.Any() ? "" : "fas fa-folder")"></i>
                                        <span class="selectedUserTypeId" style="display: none">@userType.Id</span>
                                        <span>
                                            <i class="@(userType.Children.Any() ? "" : "fas fa-angle-right")"></i> @userType.Name
                                        </span>
                                        <div class="float-right">
                                            <i class="fas fa-plus" id="add-@userType.Id" onclick="$('#addmodal-@userType.Id').modal('toggle')"> <span class="add-type">Add</span></i>
                                            <i class="fas fa-edit" id="edit-@userType.Id" onclick="$('#editmodal-@userType.Id').modal('toggle')"> <span class="edit-type">Edit</span></i>
                                        </div>
                                        <div style="display: none" class="add-@userType.Id">
                                            @Html.Partial("_AddEditType", new TypeVM
                                                {
                                                    Buddys = Model.Buddys,
                                                    Group = group,
                                                    Type = userType,
                                                    User = Model.User,
                                                    Edit = false
                                                })
                                        </div>
                                        <div style="display: none" class="edit-@userType.Id">
                                            @Html.Partial("_AddEditType", new TypeVM
                                                {
                                                    Buddys = Model.Buddys,
                                                    Group = group,
                                                    Type = userType,
                                                    User = Model.User,
                                                    UserTypes = Model.UserTypes.Where(x => x.GroupId == group.Id),
                                                    Edit = true
                                                })
                                        </div>
                                        <ul class="nested" style="list-style-type: none; display: none">
                                            @if (userType.Children.Any(x => x.SuperTypeId.HasValue && x.SuperTypeId == userType.Id))
                                            {
                                                @ShowTree(userType.Children, group)
                                            }

                                        </ul>

                                    </li>
                                    { i++; }
                                }
                            }
                        </ul>
                    }
                    @ShowTree(Model.UserTypes.Where(x => x.GroupId == group.Id), group)
                </div>
            </div>
        </div>
    }
</div>

@*<script>
    var json = @Html.Raw(Json.Encode(@Model.UserTypes.Where(x => x.GroupId == TypeGroup.DocumentFolders)));
    console.log(json)
</script>*@