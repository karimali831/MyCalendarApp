@using MyCalendar.Helpers
@model MyCalendar.Website.ViewModels.CalendarVM
@using MyCalendar.Website.ViewModels
@{
    var baseModel = ViewData[nameof(BaseVM)] as BaseVM;
}
@Html.Partial("_Status", baseModel)

<style>
    .modal-content {
        background-image: url('https://newevolutiondesigns.com/images/freebies/white-wallpaper-18.jpg');
    }
</style>

@if (Model.UserCalendars == null || !Model.UserCalendars.Any())
{
    <div class="alert alert-info alert-dismissible fade show">
        <h4 class="alert-heading"><i class="fa fa-info-circle"></i> No calendars added</h4>
        <p>Add at least one Calendar in <a href="/settings/">Settings</a> under Groups.</p>
    </div>
}
else
{

    <div id="currentActivity" class="alert alert-info" role="alert" style="display: none"></div>
    <div id="selectCalendar" class="form-group">
        <select id="selectedCalendar" class="form-control">
            @foreach (var userCalendar in Model.UserCalendars.GroupBy(x => (UserCreatedId: x.UserCreatedId, InviteeName: x.InviteeName)))
            {
                <optgroup label="@(userCalendar.Key.UserCreatedId == baseModel.User.UserID ? "My Calendars" : "Calendars shared by " + userCalendar.Key.InviteeName)">
                    @foreach (var calendar in userCalendar.Where(x => x.UserCreatedId == userCalendar.Key.UserCreatedId))
                    {
                        <option value="@calendar.UserCreatedId#@calendar.Id">Calendar - @calendar.Name</option>
                    }
                </optgroup>
            }
        </select>
    </div>

    <div id="calender"></div>
    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title"><span id="eventTitle"></span></h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <button id="btnDelete" class="btn btn-danger float-right">Remove</button>
                    <button id="btnEdit" class="btn btn-primary float-right">Edit</button>
                    <p id="pDetails"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div id="myModalSave" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content" style="padding: 5px;">
                <div class="modal-header">
                    <h4 class="modal-title">Save Event</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body" style="margin-left: 10px">
                    <form class="form-horizontal">
                        <input type="hidden" id="hdEventID" value="0" />
                        <div class="form-group">
                            <label>Tag</label>
                            <select id="ddTagID" class="form-control" required>
                                <option value="">-- select tag --</option>
                                @foreach (var tag in baseModel.UserTags.Tags)
                                {
                                    <option value="@tag.Id">@tag.Name</option>
                                }
                            </select>
                        </div>
                        <div class="form-group" id="divSplitDates" style="display:none">
                            <label>Split dates into multiple events?</label>
                            <select id="splitDates" class="form-control">
                                <option value="" selected>-- select times --</option>
                                @foreach (var preset in Utils.TimePresets())
                                {
                                    <option value="@preset.Key">@preset.Value</option>
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <label>Start</label>
                            <input type="datetime-local" step="300" id="txtStart" class="form-control" />
                        </div>
                        <div class="form-group">
                            <div class="checkbox checkbox-inline">
                                <label><input type="checkbox" id="chkIsFullDay" checked="checked" />  Full Day</label>
                            </div>
                            <div class="checkbox checkbox-inline">
                                <label><input type="checkbox" id="chkTentative" checked="checked" />  Tentative</label>
                            </div>
                        </div>
                        <div class="form-group" id="divEndDate" style="display:none">
                            <label>End</label>
                            <input type="datetime-local" step="300" id="txtEnd" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label>Description</label>
                            <textarea id="txtDescription" rows="2" class="form-control"></textarea>
                        </div>
                        <button type="button" id="btnSave" class="btn btn-success">Save</button>
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                    </form>
                </div>
            </div>
        </div>
    </div>


    <link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.css" rel="stylesheet" />
    <link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.print.css" rel="stylesheet" media="print" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/themes/black-tie/jquery-ui.min.css" rel="stylesheet" />

    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
    @section Scripts{
        <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
        <script src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.js"></script>
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>
        <script>
            $(document).ready(function () {

                $('#selectedCalendar').change(function () {
                    //Refresh the calender
                    FetchEventAndRenderCalendar();
                })

                var events = [];
                var activity = [];
                var selectedEvent = null;
                FetchEventAndRenderCalendar();
                function FetchEventAndRenderCalendar() {
                    events = [];
                    activity = [];
                    $("#cover-spin").show();
                    $.ajax({
                        type: "GET",
                        data: { 'calendarId': SelectedCalendar().calendarId },
                        url: "/Event/Get/",
                        success: function (data) {
                            $("#cover-spin").hide();
                            $.each(data.events, function (i, v) {
                                events.push({
                                    eventID: v.EventID,
                                    tagID: v.TagID,
                                    title: v.Subject != null ? v.Subject : v.Description,
                                    description: v.Description,
                                    start: moment(v.Start),
                                    end: v.End != null ? moment(v.End) : null,
                                    color: v.ThemeColor,
                                    allDay: v.IsFullDay,
                                    tentative: v.Tentative,
                                    duration: v.Duration,
                                    userId: v.UserId
                                });
                            })
                            $.each(data.currentActivity, function (i, v) {
                                activity.push({ activity: v });
                            })
                            CurrentUserActivity(activity);
                            GenerateCalender(events);
                        },
                        error: function (error) {
                            $("#cover-spin").hide();
                            alert('failed');
                        }
                    })
                }

                function SelectedCalendar() {
                    var selectedCalendar = $('#selectedCalendar option:selected').attr("value").split("#");
                    return {
                        calenderUserId: selectedCalendar[0],
                        calendarId: selectedCalendar[1],
                    };
                }

                function CurrentUserActivity(activity) {
                    if (!jQuery.isEmptyObject(activity)) {
                        $('#currentActivity').show();
                        $('#currentActivity').empty();
                        $.each(activity, function (i, v) {
                            $('#currentActivity').append('<div>' + v.activity + '</div>')
                        })
                    }
                    else {
                        $('#currentActivity').hide();
                        $('#currentActivity').empty();
                    }
                }

                function GenerateCalender(events) {
                    $('#calender').fullCalendar('destroy');
                    $('#calender').fullCalendar({
                        contentHeight: 450,
                        defaultDate: new Date(),
                        timeFormat: 'h(:mm)a',
                        longPressDelay: 150,
                        theme: 'jquery-ui',
                        header: {
                            left: 'prev,next today',
                            center: 'title',
                            right: 'month,basicWeek,basicDay'
                        },
                        eventLimit: true,
                        eventColor: '#378006',
                        events: events,
                        //eventRender: function (eventObj, $el) {
                        //    var end = moment(eventObj.end);
                        //    $el.popover({
                        //        title: eventObj.title + (end.isValid() ? " until " + end.format('HH:mm') : " all day"),
                        //        content: (eventObj.description == eventObj.title ? "" : eventObj.description),
                        //        trigger: 'hover',
                        //        placement: 'top',
                        //        container: 'body'
                        //    });
                        //},
                        eventClick: function (calEvent, jsEvent, view) {
                            selectedEvent = calEvent;
                            $('#myModal #eventTitle').text(calEvent.title);
                            var $description = $('<div/>');
                            $description.append($('<p/>').html('<b>Start:</b> ' + calEvent.start.format("DD-MMM-YYYY HH:mm a")));
                            if (calEvent.end != null) {
                                $description.append($('<p/>').html('<b>End:</b> ' + calEvent.end.format("DD-MMM-YYYY HH:mm a")));
                            }
                            if (calEvent.duration != "") {
                                $description.append($('<p/>').html('<b>Duration:</b> ' + calEvent.duration));
                            }
                            if (calEvent.description != null) {
                                $description.append($('<p/>').html('<b>Description:</b> ' + calEvent.description));
                            }
                            if (calEvent.tentative) {
                                $description.append($('<p/>').html('<b>Tentative</b>: Yes'));
                            }

                            $('#myModal #pDetails').empty().html($description);

                            $('#myModal').modal();
                        },
                        selectable: true,
                        select: function (start, end) {
                            selectedEvent = {
                                eventID: 0,
                                title: '',
                                description: '',
                                start: start,
                                end: end.subtract(1, "days"),
                                allDay: false,
                                tentative: false,
                                color: '',
                                userId: ''
                            };
                            openAddEditForm();
                            $('#calendar').fullCalendar('unselect');
                        },
                        editable: true,
                        eventDrop: function (event) {
                            var data = {
                                EventID: event.eventID,
                                TagID: event.tagID,
                                Start: event.start.format('YYYY-MM-DD[T]HH:mm'),
                                End: event.end != null ? event.end.format('YYYY-MM-DD[T]HH:mm') : null,
                                Description: event.description,
                                IsFullDay: event.allDay,
                                Tentative: event.tentative
                            };
                            SaveEvent(data);
                        }
                    })
                }

                $('#btnEdit').click(function () {
                    //Open modal dialog for edit event
                    openAddEditForm();
                })
                $('#btnDelete').click(function () {
                    var userId = '@baseModel.User.UserID';

                    if (userId != SelectedCalendar().calenderUserId) {
                        alert('Cannot remove event - selected calendar is not yours');
                        return;
                    }
                    if (selectedEvent != null && confirm('Are you sure?')) {
                        $.ajax({
                            type: "POST",
                            url: '/Event/Delete',
                            data: { 'eventID': selectedEvent.eventID },
                            success: function (data) {
                                if (data.status) {
                                    //Refresh the calender
                                    FetchEventAndRenderCalendar();
                                    $('#myModal').modal('hide');
                                }
                                else {
                                    alert(data.responseText)
                                    //window.location.reload(false);
                                }
                            },
                            error: function () {
                                alert('Failed');
                            }
                        })
                    }
                })
                $('#dtp1,#dtp2').datetimepicker({
                    format: 'YYYY-MM-DD[T]HH:mm'
                });
                $('#chkIsFullDay').change(function () {
                    if ($(this).is(':checked')) {
                        $('#divEndDate').hide();
                        $('#divSplitDates').hide();
                    }
                    else {
                        $('#divEndDate').show();
                        hideSplitDates(moment($('#txtStart').val()), moment($('#txtEnd').val()))
                    }
                });
                $('#txtEnd').change(function () {
                    hideSplitDates(moment($('#txtStart').val()), moment($('#txtEnd').val()))
                });
                $('#splitDates').change(function () {
                    var result = $('#splitDates').val().split('-');
                    var startDate = moment($('#txtStart').val(), "YYYY-MM-DD[T]HH:mm").format('YYYY-MM-DD[T]' + result[0]);
                    var endDate = moment($('#txtEnd').val(), "YYYY-MM-DD[T]HH:mm").format('YYYY-MM-DD[T]' + result[1]);

                    if ($(this).val() != '') {
                        $('#txtStart').val(startDate);
                        $('#txtEnd').val(endDate);
                    }
                });
                function hideSplitDates(startDate, endDate) {
                    var diff = endDate.diff(startDate, 'days');


                    if ($('#hdEventID').val() != 0) {
                        $('#divSplitDates').hide();
                    }
                    else if (diff > 0) {
                        $('#divSplitDates').show();
                    }
                    else {
                        $('#divSplitDates').hide();
                    }
                }

                function openAddEditForm() {
                    var userId = '@baseModel.User.UserID';

                    if (userId != SelectedCalendar().calenderUserId) {
                        alert('Cannot add/edit event - selected calendar is not yours');
                        return;
                    }

                    if (selectedEvent != null) {
                        $('#hdEventID').val(selectedEvent.eventID);

                        var startDate = new Date();
                        var endDate = new Date();
                        startDate.setHours(startDate.getHours() + 1);
                        endDate.setHours(startDate.getHours() + 2);

                        var nextStartHour = startDate.getHours();
                        var nextEndHour = endDate.getHours();
                        var startTime = (selectedEvent.eventID != 0 ? "HH:mm" : (nextStartHour < 10 ? "0" + nextStartHour : nextStartHour) + ":00");
                        var endTime = (selectedEvent.eventID != 0 ? "HH:mm" : (nextEndHour < 10 ? "0" + nextEndHour : nextEndHour) + ":00");

                        $('#txtStart').val(selectedEvent.start.format('YYYY-MM-DD[T]' + startTime));
                        $('#chkIsFullDay').prop("checked", selectedEvent.allDay || false);
                        $('#chkIsFullDay').change();
                        $('#chkTentative').prop("checked", selectedEvent.tentative || false);
                        $('#chkTentative').change();
                        $('#txtEnd').val(selectedEvent.end != null ? selectedEvent.end.format('YYYY-MM-DD[T]' + endTime) : '');
                        $('#txtDescription').val(selectedEvent.description);
                        $('#ddTagID').val(selectedEvent.tagID);
                        $('#splitDates').val('');
                        hideSplitDates(moment(selectedEvent.start), moment(selectedEvent.end))
                    }
                    $('#myModal').modal('hide');
                    $('#myModalSave').modal();
                }
                $('#btnSave').click(function () {
                    //Validation/
                    if ($('#txtStart').val().trim() == "") {
                        alert('Start date required');
                        return;
                    }
                    if ($('#chkIsFullDay').is(':checked') == false && $('#txtEnd').val().trim() == "") {
                        alert('End date required');
                        return;
                    }
                    else {
                        var startDate = moment($('#txtStart').val(), "YYYY-MM-DD[T]HH:mm").toDate();
                        var endDate = moment($('#txtEnd').val(), "YYYY-MM-DD[T]HH:mm").toDate();
                        if (startDate > endDate) {
                            alert('Invalid end date');
                            return;
                        }
                    }

                    var data = {
                        EventID: $('#hdEventID').val(),
                        TagID: $('#ddTagID').val(),
                        CalendarId: SelectedCalendar().calendarId,
                        Start: $('#txtStart').val().trim(),
                        End: $('#chkIsFullDay').is(':checked') ? null : $('#txtEnd').val().trim(),
                        Description: $('#txtDescription').val(),
                        IsFullDay: $('#chkIsFullDay').is(':checked'),
                        Tentative: $('#chkTentative').is(':checked'),
                        SplitDates: $('#splitDates').val()
                    }
                    SaveEvent(data);
                    // call function for submit data to the server
                })
                function SaveEvent(data) {
                    $.ajax({
                        type: "POST",
                        url: '/Event/Save/',
                        data: data,
                        success: function (data) {
                            if (data.status) {
                                //Refresh the calender
                                FetchEventAndRenderCalendar();
                                $('#myModalSave').modal('hide');
                            }
                            else {
                                alert(data.responseText)
                                //window.location.reload(false);
                            }
                        },
                        error: function () {
                            alert('Failed');
                        }
                    })
                }
            })
        </script>
    }
}