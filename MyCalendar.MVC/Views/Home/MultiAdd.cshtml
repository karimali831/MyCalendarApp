@model MyCalendar.Website.ViewModels.SchedulerVM
@using MyCalendar.Website.ViewModels
@using MyCalendar.Enum

@using (Html.BeginForm())
{
    @Html.Partial("_Status", new CalendarVM { UpdateStatus = Model.UpdateStatus })
    <div class="jumbotron">
        <h3><span class="glyphicon glyphicon-calendar"> Scheduler</span></h3>
        <hr />
        <div class="form-group">
            <label for="dates">How many dates?</label>
            <select id="dates" name="dates" class="form-control" onchange="doIt(this,'@Url.Action("MultiAdd", "Home")')">
                <option value="1">1 Date</option>
                @for (int i = 2; i <= 10; i++)
                {
                    <option value="@i" selected="@(i == Model.Dates ? true : false)">@i Dates</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="tag">Tag</label> @Html.ActionLink("(edit tags)", "Settings", "Home")
            <select id="tag" name="TagId" class="form-control" required>
                <option value="">-- select tag --</option>
                @foreach (var tag in Model.UserTags.Tags)
                {
                    <option value="@tag.Id" selected="@(tag.Id == Model.TagID)">@tag.Name</option>
                }
            </select>
        </div>
        <br />
        @for (int i = 1; i <= Model.Dates; i++)
        {
            <h4><span class="glyphicon glyphicon-time"></span> Select Date @i</h4>
            <hr />
            <div class="form-group">
                <label for="start">Start</label>
                <input type="datetime-local" id="start" name="StartDate[]" class="form-control" value="@(Model.StartDate != null && Model.StartDate[i] != null ? Model.StartDate[i].ToString("yyy-MM-ddTHH:mm") : DateTime.UtcNow.ToLocalTime().AddDays(i-1).ToString("yyy-MM-ddTHH:mm"))" required />
            </div>
            <div class="form-group" id="divEndDate">
                <label for="end">End</label>
                <input type="datetime-local" id="end" name="EndDate[]" class="form-control" value="@(Model.EndDate != null  && Model.EndDate[i] != null ? Model.EndDate[i].Value.ToString("yyy-MM-ddTHH:mm") : DateTime.UtcNow.ToLocalTime().AddDays(i-1).AddHours(2).ToString("yyy-MM-ddTHH:mm"))" required />
            </div>
        }
        <button type="submit" class="btn btn-primary">Update</button>
    </div>
}

@section Scripts{
    <script type="text/javascript">
        function doIt(item, baseUrl) {
            window.location.href = baseUrl + '?dates=' + item.value;
        }
    </script>

}
