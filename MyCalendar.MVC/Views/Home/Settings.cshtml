@model MyCalendar.Website.ViewModels.CalendarVM

@if (Model.User != null && Model.User.Authenticated)
{
    using (Html.BeginForm())
    {

        if (Model.SettingsUpdated.HasValue)
        {
            if (Model.SettingsUpdated.Value == 1)
            {
                <div class="alert alert-success" role="alert">
                    <div class="col-auto align-self-start">
                        <div class="glyphicon glyphicon-ok"></div>
                        Your settings have been saved successfully
                    </div>
                </div>
            }
            if (Model.SettingsUpdated == 0)
            {
                <div class="alert alert-danger" role="alert">
                    <div class="col-auto align-self-start">
                        <div class="glyphicon glyphicon-remove"></div>
                        There was an issue updating your settings
                    </div>
                </div>
            }
        }
        <div>
            <div class="form-group">
                @Html.LabelFor(x => x.User.Name)
                @Html.TextBoxFor(s => s.User.Name, new { @class = "form-control", @type = "text", @placeholder = "Name" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.User.Passcode, "Login Passcode") <font color="red"><small>(changing this will log you out)</small></font>
                @Html.TextBoxFor(s => s.User.Passcode, new { @class = "form-control", @type = "number", @placeholder = "Passcode" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.User.Email)
                @Html.TextBoxFor(s => s.User.Email, new { @class = "form-control", @type = "text", @placeholder = "Email" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.User.PhoneNumber)
                @Html.TextBoxFor(s => s.User.PhoneNumber, new { @class = "form-control", @type = "text", @placeholder = "Phone number" })
            </div>
            @Html.HiddenFor(x => x.User.UserID)
            <button type="submit" class="btn btn-primary">Update</button>
        </div>
    }
}
else
{
    <div class="alert alert-danger" role="alert">
        <div class="col-auto align-self-start">
            <div class="glyphicon glyphicon-exclamation-sign"></div>
            You are not logged in!
        </div>
    </div>
}